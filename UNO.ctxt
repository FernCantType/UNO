#BlueJ class context
comment0.target=UNO
comment0.text=\r\n\ Play\ the\ game\ UNO\ manually\ or\ automatically\ by\ adding\ bots\ and\ players.\r\n\ \r\n\ @author\ Lorenzo\ Canali\r\n\ @version\ 12/7/2024\r\n
comment1.params=numOfPlayers
comment1.target=UNO(int)
comment1.text=\r\n\ Constructor\ for\ UNO\ with\ a\ set\ number\ of\ players\r\n\ \r\n\ @param\ numOfPlayers\ Total\ players\ in\ the\ game\r\n
comment10.params=card\ newSuit
comment10.target=void\ handleWildCard(UNOCard,\ java.lang.String)
comment10.text=\r\n\ Handles\ wild\ card\ logic\ for\ setting\ suit\r\n\ \r\n\ @param\ card\ The\ Wildcard\ that\ needs\ to\ be\ handled\r\n\ @param\ newSuit\ the\ new\ suit\ to\ set\ the\ wildcard\ as\r\n
comment11.params=card\ newSuit\ playerIndex
comment11.target=void\ handleWildCard(UNOCard,\ java.lang.String,\ int)
comment11.text=\r\n\ Handles\ wild\ card\ logic\ for\ setting\ suit\r\n\ \r\n\ @param\ card\ The\ Wildcard\ that\ needs\ to\ be\ handled\r\n\ @param\ newSuit\ the\ new\ suit\ to\ set\ the\ wildcard\ as\r\n\ @param\ playerIndex\ the\ player\ of\ the\ card\ who\ played\ the\ Global\ Wild\ Draw\ Four\r\n\ that\ needs\ to\ give\ it\ to\ the\ next\ person\r\n
comment12.params=
comment12.target=void\ initializeTopCard()
comment12.text=\r\n\ Creates\ the\ topcard\ of\ the\ game\ to\ start\ playing\r\n
comment13.params=args
comment13.target=void\ main(java.lang.String[])
comment13.text=\r\n\ Main\ method\ for\ the\ class\ UNO.\ This\ is\ where\ you\ actually\ play\ the\ game.\ \r\n
comment2.params=
comment2.target=void\ initializePlayers()
comment2.text=\r\n\ Initialize\ the\ players\ by\ adding\ bots\ and\ human\ players.\ Human\ players\ will\r\n\ be\ chosen\ then\ bots\ will\ fill\ all\ spaces\ human\ players\ don't\ take.\ Has\ exception\ handling\ for\ invalid\ inputs\r\n
comment3.params=
comment3.target=void\ playGame()
comment3.text=\r\n\ Starts\ the\ game\ and\ runs\ turns\ until\ a\ winner\ is\ determined\r\n
comment4.params=player
comment4.target=void\ dealCards(Player)
comment4.text=\r\n\ Deals\ 7\ cards\ to\ a\ player\r\n\ \r\n\ @param\ the\ player\ to\ be\ dealt\ 7\ cards\r\n
comment5.params=player\ cardIndex
comment5.target=boolean\ playCard(Player,\ int)
comment5.text=\r\n\ Validates\ and\ plays\ a\ card\r\n\ \r\n\ @param\ player\ the\ player\ who\ is\ playing\ the\ card\ who\ needs\ to\ consume\ the\ card\r\n\ @param\ cardIndex\ The\ card\ they\ chose\ to\ play\ index\ value\r\n\ @return\ returns\ true\ if\ is\ a\ valid\ card,\ false\ if\ not\r\n
comment6.params=player
comment6.target=int\ findIndexOfPlayer(Player)
comment6.text=\r\n\ Finds\ the\ index\ of\ the\ player\r\n\ \r\n\ @param\ player\ the\ player\ to\ find\ the\ index\ of\r\n\ @return\ the\ index\ of\ the\ player\r\n
comment7.params=currentPlayerIndex\ numCards
comment7.target=void\ drawCardsForNextPlayer(int,\ int)
comment7.text=\r\n\ Forces\ the\ next\ player\ to\ draw\ a\ specified\ number\ of\ cards.\r\n\r\n\ @param\ currentPlayerIndex\ The\ index\ of\ the\ current\ player.\r\n\ @param\ numCards\ The\ number\ of\ cards\ the\ next\ player\ should\ draw.\r\n
comment8.params=player
comment8.target=void\ drawCard(Player)
comment8.text=\r\n\ Draws\ a\ card\ for\ a\ player.4\r\n\ \r\n\ @param\ player\ the\ player\ to\ draw\ a\ card\r\n
comment9.params=card\ playerIndex
comment9.target=void\ applyCardEffect(UNOCard,\ int)
comment9.text=\r\n\ Applies\ effects\ of\ special\ cards.\r\n\ \r\n\ @param\ card\ checks\ to\ see\ if\ the\ card\ needs\ to\ apply\ any\ effects\ and\ if\ it\r\n\ does\ the\ switch\ case\ will\ mutate\ according\ variables\r\n\ @param\ playerIndex\ the\ index\ of\ the\ player\ who\ will\ be\ taking\ the\ cards\ for\ \r\n\ plus\ 2\ and\ plus\ 4\ because\ the\ int\ is\ easier\ to\ resolve\ than\ the\ actual\ player\r\n\ cards\r\n
numComments=14
